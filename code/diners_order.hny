from synch import Lock, acquire, release

def Diners(n) returns diners_state:
    diners_state = { .forks: [Lock(),] * n, .n: n }

def enter(f, i):
    acquire(?f->forks[min(i, (i + 1) % f->n)])
    acquire(?f->forks[max(i, (i + 1) % f->n)])

def exit(f, i):
    release(?f->forks[i])
    release(?f->forks[(i + 1) % f->n])
